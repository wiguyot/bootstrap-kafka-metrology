[agent]
  interval = "3s"          # Fréquence de collecte des métriques
  flush_interval = "3s"    # Fréquence d’envoi des métriques vers les outputs (InfluxDB, etc.)
  flush_jitter = "0s"      # (optionnel) Ajoute du jitter pour lisser les pics d’écriture
  precision = ""           # Précision des timestamps ("" = auto)
  round_interval = true
  omit_hostname = false

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "my-token"
  organization = "my-org"
  bucket = "kafka_metrics"

#### broker-1 ***********
[[inputs.jolokia2_agent]]
  urls = ["http://kafka-1:8778/jolokia"]
  name_prefix = "kafka_"
  tags = { broker = "kafka-1" }

  [[inputs.jolokia2_agent.metric]]
    name  = "messages_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_out"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_rejected"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "failed_fetch"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=FailedFetchRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "failed_produce"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=FailedProduceRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replication_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replication_out"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "produce_requests"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=TotalProduceRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "fetch_requests"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=TotalFetchRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "handler_idle"
    mbean = "kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "produce_queue_time"
    mbean = "kafka.server:type=RequestMetrics,name=ProduceRequestQueueTimeMs"
    paths = ["Count", "Mean", "Max"]

  [[inputs.jolokia2_agent.metric]]
    name  = "fetch_queue_time"
    mbean = "kafka.server:type=RequestMetrics,name=FetchRequestQueueTimeMs"
    paths = ["Count", "Mean", "Max"]

  #### hot / skew
  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_in_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic=*"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_out_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic=*"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "messages_in_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic=*"
    paths = ["Count"]

  #### ISR monitoring
  [[inputs.jolokia2_agent.metric]]
    name  = "under_min_isr"
    mbean = "kafka.server:type=ReplicaManager,name=UnderMinIsrPartitionCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "offline_partitions"
    mbean = "kafka.server:type=ReplicaManager,name=OfflinePartitionsCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "under_replicated_partitions"
    mbean = "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
    paths = ["Value"]

  #### Threads monitoring
  [[inputs.jolokia2_agent.metric]]
    name  = "request_queue_size"
    mbean = "kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgQueueSize"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "network_processor_avg_idle"
    mbean = "kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent"
    paths = ["Value"]

  #### inter-broker replication metrics
  [[inputs.jolokia2_agent.metric]]
    name  = "replica_fetcher_lag"
    mbean = "kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replica_fetcher_requests"
    mbean = "kafka.server:type=ReplicaFetcherManager,name=RequestRate,clientId=Replica"
    paths = ["Count"]

  #### global health of brokers
  [[inputs.jolokia2_agent.metric]]
    name  = "active_controller"
    mbean = "kafka.controller:type=KafkaController,name=ActiveControllerCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "controller_queue_size"
    mbean = "kafka.controller:type=ControllerStats,name=ControllerEventQueueSize"
    paths = ["Value"]



#### broker-2 ***********
[[inputs.jolokia2_agent]]
  urls = ["http://kafka-2:8778/jolokia"]
  name_prefix = "kafka_"
  tags = { broker = "kafka-2" }

  [[inputs.jolokia2_agent.metric]]
    name  = "messages_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_out"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_rejected"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "failed_fetch"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=FailedFetchRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "failed_produce"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=FailedProduceRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replication_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replication_out"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "produce_requests"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=TotalProduceRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "fetch_requests"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=TotalFetchRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "handler_idle"
    mbean = "kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "produce_queue_time"
    mbean = "kafka.server:type=RequestMetrics,name=ProduceRequestQueueTimeMs"
    paths = ["Count", "Mean", "Max"]

  [[inputs.jolokia2_agent.metric]]
    name  = "fetch_queue_time"
    mbean = "kafka.server:type=RequestMetrics,name=FetchRequestQueueTimeMs"
    paths = ["Count", "Mean", "Max"]

  #### ISR monitoring
  [[inputs.jolokia2_agent.metric]]
    name  = "under_min_isr"
    mbean = "kafka.server:type=ReplicaManager,name=UnderMinIsrPartitionCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "offline_partitions"
    mbean = "kafka.server:type=ReplicaManager,name=OfflinePartitionsCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "under_replicated_partitions"
    mbean = "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
    paths = ["Value"]

  #### hot / skew
  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_in_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic=*"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_out_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic=*"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "messages_in_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic=*"
    paths = ["Count"]

  #### Threads monitoring
  [[inputs.jolokia2_agent.metric]]
    name  = "request_queue_size"
    mbean = "kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgQueueSize"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "network_processor_avg_idle"
    mbean = "kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent"
    paths = ["Value"]

  #### inter-broker replication metrics
  [[inputs.jolokia2_agent.metric]]
    name  = "replica_fetcher_lag"
    mbean = "kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replica_fetcher_requests"
    mbean = "kafka.server:type=ReplicaFetcherManager,name=RequestRate,clientId=Replica"
    paths = ["Count"]

  #### global health of brokers
  [[inputs.jolokia2_agent.metric]]
    name  = "active_controller"
    mbean = "kafka.controller:type=KafkaController,name=ActiveControllerCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "controller_queue_size"
    mbean = "kafka.controller:type=ControllerStats,name=ControllerEventQueueSize"
    paths = ["Value"]



#### broker-3 ***********
[[inputs.jolokia2_agent]]
  urls = ["http://kafka-3:8778/jolokia"]
  name_prefix = "kafka_"
  tags = { broker = "kafka-3" }

  [[inputs.jolokia2_agent.metric]]
    name  = "messages_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_out"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_rejected"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "failed_fetch"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=FailedFetchRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "failed_produce"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=FailedProduceRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replication_in"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replication_out"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "produce_requests"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=TotalProduceRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "fetch_requests"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=TotalFetchRequestsPerSec"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "handler_idle"
    mbean = "kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "produce_queue_time"
    mbean = "kafka.server:type=RequestMetrics,name=ProduceRequestQueueTimeMs"
    paths = ["Count", "Mean", "Max"]

  [[inputs.jolokia2_agent.metric]]
    name  = "fetch_queue_time"
    mbean = "kafka.server:type=RequestMetrics,name=FetchRequestQueueTimeMs"
    paths = ["Count", "Mean", "Max"]
  #### hot / skew
  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_in_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic=*"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "bytes_out_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic=*"
    paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
    name  = "messages_in_per_topic"
    mbean = "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic=*"
    paths = ["Count"]

  #### ISR monitoring
  [[inputs.jolokia2_agent.metric]]
    name  = "under_min_isr"
    mbean = "kafka.server:type=ReplicaManager,name=UnderMinIsrPartitionCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "offline_partitions"
    mbean = "kafka.server:type=ReplicaManager,name=OfflinePartitionsCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "under_replicated_partitions"
    mbean = "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
    paths = ["Value"]

  #### Threads monitoring
  [[inputs.jolokia2_agent.metric]]
    name  = "request_queue_size"
    mbean = "kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgQueueSize"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "network_processor_avg_idle"
    mbean = "kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent"
    paths = ["Value"]

  #### inter-broker replication metrics
  [[inputs.jolokia2_agent.metric]]
    name  = "replica_fetcher_lag"
    mbean = "kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "replica_fetcher_requests"
    mbean = "kafka.server:type=ReplicaFetcherManager,name=RequestRate,clientId=Replica"
    paths = ["Count"]

  #### global health of brokers
  [[inputs.jolokia2_agent.metric]]
    name  = "active_controller"
    mbean = "kafka.controller:type=KafkaController,name=ActiveControllerCount"
    paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
    name  = "controller_queue_size"
    mbean = "kafka.controller:type=ControllerStats,name=ControllerEventQueueSize"
    paths = ["Value"]